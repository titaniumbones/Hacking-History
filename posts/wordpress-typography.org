
#+BLOG: hh
#+POSTID: 749
#+BLOG: hh
#+DATE: [2015-03-09 Mon 10:21]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: 
#+TAGS:
#+DESCRIPTION:
#+TITLE: Wordpress Typography

I am lousy at typograpy, but will do my best to provide a simple guide here. 

* Basic principles of typography
You should really [[http://designinstruct.com/tools-basics/the-basics-of-typography/][ask someone else]], but here are some basics:
- fonts look different on-screen than on paper
- most default web fonts are ugly
- while many font prettiness characteristics are general (kerning, proportionality, line-height, x-height, etc.) other are context-dependent (contrast to other fonts used, seriousness, etc.)
- in general, for web use we /prefer sans-serif fonts/
- in general, we favour /general-purpose, usually minimalist fonts/ instead of, e.g., comical or ultra-techy or super-flowery fonts
- you should *almost never* use more than 2 fonts on a page, though occasionally 3 fonts is acceptable. Usually, then, this means one font for headings, and another for body. 

* Font Pairings
I'm terrible at this. [[https://www.google.com/search?q=font+pairings&ie=utf-8&oe=utf-8][Other people have lots of ideas]], but be prepared to haveto do some work to get this right.

* Adding Fonts
The basic problem of web typography boils down to this: your browser can only render the fonts that your computer knows about; but every computer has different fonts installed. Therefore, outside of a very small number of "web-safe" fonts, you can't guarantee that your website will render the same on all computers.  

The first step in addressing this is to use a so-called "font stack," which you define using the "font-family" instruction in CSS:

#+BEGIN_SRC css
body {
  font-family: "Helvetica Neue", "Helvetica", sans-serif;
}
#+END_SRC

Your browser will go through the stack and display the first font it recognizes: first it will try Helvetica Neue, then Helvetica, and if neither of those work, then it will display the default sans-serif font.  If you define your stack right, then at least your bage will have similar layout on all screens, even if the particulars will vary slightly.  

The second stage has been the development, in CSS3, of web fonts.  These are font definitions that live in a web-accessible file. Your browser renders the fonts directly, rather than asking your computer for the font definition first.  So, a web font should look the same on a Mac, Windows, Linux, Android, iOS, or whatever device. This is actually pretty simple.  Here's how it looks in CSS:

#+BEGIN_SRC css
@font-face {
  font-family: 'MyWebFont';
  src: url('webfont.eot'); /* IE9 Compat Modes */
  src: url('webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('webfont.woff2') format('woff2'), /* Super Modern Browsers */
       url('webfont.woff') format('woff'), /* Pretty Modern Browsers */
       url('webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
       url('webfont.svg#svgFontName') format('svg'); /* Legacy iOS */
}

body {
  font-family: 'MyWebFont', Fallback, sans-serif;
}
#+END_SRC

Let's talk about 3 different mechanisms for applying this.

** Add a Google Font to your Stylesheet

This is so easy; we do it directly in SASS.  First, find a font you like at [[https://www.google.com/fonts][Google fonts]]. Click on "Add to Collection", then press "use", which will open up a new screen.  Make sure to customize the font as you desire; then in step 3, click the "include" tab which will show you a line like this:

#+BEGIN_SRC css
@import url(http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic|Lato:400,400italic);
#+END_SRC

Add this line to ~_settings.scss~ or ~app.scss~; your font will now be loaded automatically! Now you just have to use it; do this by setting the ~$body-font-family~ and ~$header-font-family~ variables in ~_settings.scss~:

#+BEGIN_SRC css
//$body-font-family: 'Open Sans', "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;            
$body-font-family: 'Roboto', "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;            

// $header-font-family: $body-font-family;
$header-font-family: 'Lato', "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;            
#+END_SRC

All done!

- Advantages :: incredibly easy!
- Disadvantages :: Google Fonts can be very slow to load. If you find your sites starts taking ages to load, this could be the culprit, and you should try one of the other options.

** Register a google Stylesheet
This is almost exactly the same as before, but instead of using ~@import~, use wordpress's ~wp_register-style~ method by adding this to the bottom of your ~functions.php~:

#+BEGIN_SRC php
            // register Google font
            wp_register_style('google-font', 'http://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Lora:400,700|Droid+Sans+Mono');
            wp_enqueue_style('google-font');
#+END_SRC

** Uploading fonts and adding by hand
If styles are still slow to load, you can upload the font files to your wordpress site and write the ~@font-face~ css by hand.  [[http://www.fontsquirrel.com/fonts/open-sans][Font Squirrel]] will create a zipfile full of individual font files for you to upload.  Put these in a subfolder in your uploads directory.  Then create the ~@font-face~ css entries by hand as above -- put them athte top of your ~app.scss~.  This will be fairly timeconsuming, as you need an entry for the normal, bold, tialica, and bold-italic font faces.  [[https://css-tricks.com/snippets/css/using-font-face/][Follow this guide]], which was also referenced above.  

** Using a plugin
If all else fails, you can use a plugin instead of these methods.  [[https://wordpress.org/plugins/tags/typography][Here are some possibilities]]. However, this is a less robust solution and I don't recommend it.

OK, there you are!  Maybe come to class having already thought about what fonts you want to use, and in what circumstances.  

