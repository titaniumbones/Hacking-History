#+DATE: [2015-02-10 Tue 09:23]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: 
#+TAGS:
#+DESCRIPTION:
#+TITLE: More about adding overlays to maps

Whew, this turned out to be a killer!  It is not very easy to get information from a standalone GIS program into google maps -- in fact, it's crazy hard!  

* options
We have two sets of options:
- which mapping framework do we use, Google Maps or Leaflet?
- What kind of overlay do we create -- KML, Javascript Ground Overlay, or Tiled Overlay?

The new(ish) Leaflet.js mapping framework is awesome, and I expect to switch to it in future years.  Among other things, it makes it really easy to add overlays and things like transparency controls. 

Unfortunately, it isn't yet fully implemented for Wordpress.  So, another time, and Google Maps it is.

What kind of overlay to create -- that is so tough!  I have figured out how to do it both with KML and with Ground Overlays.  Tiled Overlays are complicated, though easier with Leaflet.  So, I think it all depends on which mapping plugin you choose.

* My choice
I installed the [[http://www.wpgeo.com/][WPGeo]] map plugin, which I like a lot.  It has very simple shortcode syntax, and you can easily display a map with markers for all geotagged posts, which is lovely.  

Unfortunately, it isn't easy to add an overlay.  At first I added KML overlays, but then I couldn't control the opacity.  So I settled on this code, which goes in functions.php:

#+BEGIN_SRC php
function my_wpgeo_map_js_preoverlays( $output, $map_id ) {
    /* 
    This function adds an image overlay to all maps generated by the WP Geo map plugin.  
    You will first need to upload a .PNG image using the media uploader.  This image should
    be generated via export of a georeferenced "raster layer" in QGIS or ARCgis.  When exporting, you 
    will also need to acquire the precise "bounding co-ordinates" in decimal degrees.  This 
    sounds simple but isn't so easy.  See my guide for more info
    */

    /*  You will need to adjust all of these */
    /*  The first 4 are the co-ordinates you established in your GIS program*/
    $north_bound = 43.65661944444;
    $south_bound = 43.64408888888889;
    $east_bound = -79.41159722222223;
    $west_bound = -79.43393333333333;

    
    /* this variable is the ID of the image attachment -- the only way to find this out
       is within wordpress itself */
    $image_id = 62;
    /* you could also input the url directly here instead */
    $image_url = wp_get_attachment_url ($image_id);

    /* set the image opacity here */  
    $image_opacity = 0.7;
    $output .= "
          var imageBounds = new google.maps.LatLngBounds(
             new google.maps.LatLng($south_bound,$west_bound),
             new google.maps.LatLng($north_bound, $east_bound));
          var overlayOpts = {
             opacity:$image_opacity
           }
          var historicalImageOverlay = new google.maps.GroundOverlay(
    \"$image_url\",imageBounds, overlayOpts);
          historicalImageOverlay.setMap(" . $map_id . ");
";
      return $output;
}

/* now we make sure our function is called every time a map is generated */
add_filter( 'wpgeo_map_js_preoverlays', 'my_wpgeo_map_js_preoverlays', 10, 2 );

#+END_SRC

And that's pretty much that -- you just need to adjust all of the variables to fit your specific image.  I have written a short python script that spits out the bound values for a given geoTIFF so that part should not be much easier.  

Another possibility is to use the [[https://wordpress.org/plugins/comprehensive-google-map-plugin/][Comprehensive Google Maps Plugin]]; it is actually awesome, but has been discontinued, so that is a little bit of a worry.  Also I wasn't quite sure how to geotag posts.  But it does a great job of importing KML data!  

Next year it will be Leaflet!  But not yet, alas.  
